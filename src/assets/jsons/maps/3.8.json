{
    "width": 11,
    "height": 11,
    "tiles": [
        {
            "type": "PLATFORM",
            "x": 2
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "d": {
                "bt": "SELL_REFUND",
                "bl": 1
            }
        },
        {
            "type": "SCRIPT",
            "x": 1,
            "y": 1,
            "d": {
                "id": 6898275380356789567,
                "script": "--[[\n3.8\nI18nGenerator {\n    \"lvlsub_3_8_010_you_will_meet\",\n    \"lvlsub_3_8_020_i_think_you_also\",\n    \"lvlsub_3_8_030_well_not_interesting\",\n    \"lvlsub_3_8_040_we_need_to_defeat\",\n    \"lvlsub_3_8_050_his_name_is\",\n    \"lvlsub_3_8_060_you_have_few_waves\",\n    \"lvlsub_3_8_070_i_have_to_admit\",\n    \"lvlsub_3_8_080_now_its_time\",\n    \"lvlsub_3_8_090_finish_your_work\"\n}\n--]]\nlocal TAG = \"3.8.lua: \"\n\ndofile(\"scripts/utils/tutorial.lua\")\n\nlocal i18n = function() return managers.LocaleManager.i18n end\nlocal sm = function() return SP._graphics.storylineMessages end\nlocal st = function() return SP._graphics.subtitles end\n\nlocal BOSS_WAVE_NUMBER = 50\nlocal forceSubtitles = false\n\nlocal tut\n\naddEventHandler(\"SystemPostSetup\", function()\n    forceSubtitles = managers.BasicLevelManager:getLevel(\"3.8\").maxReachedWave >= BOSS_WAVE_NUMBER or SP.gameState.gameIsContinued\n    tut:start()\n\n    SP.gameState.listeners:add(luajava.createProxy(GNS .. \"systems.GameStateSystem$GameStateSystemListener\", {\n        realUpdate = function(deltaTime)\n            tut:update(deltaTime)\n        end,\n\n        affectsGameState = function() return true end, -- \u0417\u0430\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0443\u0448\u0430\u0442\u0435\u043b\u044f\n        getConstantId = function() return 50 end\n    }))\nend)\n\ntut = tutorial:new({\n    {\n        check = function()\n            return SP.wave:getCompletedWavesCount() >= BOSS_WAVE_NUMBER\n        end,\n        start = function()\n            tut:delay(2, function()\n                if SP._graphics ~= nil then\n                    st():schedule({\n                        tut.ENSOR_TAG .. \" [#F44336]&-Fh#fc-##vp&*vb-h#fNp%gv-iv%g%l#Qrg#rp$g$$rq-![]\",\n                        tut.ENSOR_TAG .. \" [#F44336]0x91CF0FF: -F#gb$c**Vg$![]\",\n                        tut.ENSOR_TAG .. \" [#F44336]P#baf*r&#dh#!ra-pr*fNer#P-ngnf&g&e#bcu-vp![]\"\n                    }, 9, 0.5)\n                    st():schedule({\n                        tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_010_you_will_meet\"),\n                        tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_020_i_think_you_also\"),\n                        tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_030_well_not_interesting\"),\n                        tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_040_we_need_to_defeat\"),\n                        tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_050_his_name_is\")\n                    }, 2, 5)\n                end\n\n                tut:condition(function() return SP.wave.wave ~= nil and SP.wave.wave.waveNumber >= BOSS_WAVE_NUMBER - 3 end, function()\n                    if SP._graphics ~= nil then\n                        st():add(tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_060_you_have_few_waves\"))\n                    end\n                end)\n            end)\n        end,\n        done = function()\n            if SP._graphics ~= nil then\n                local messages = {\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_070_i_have_to_admit\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_080_now_its_time\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_3_8_090_finish_your_work\")\n                }\n                if forceSubtitles then\n                    st():schedule(messages, 1, 5)\n                else\n                    sm():queue(messages)\n                end\n            end\n        end\n    }\n})\ntut._noSyncCheck = true\n"
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 1
        },
        {
            "type": "SOURCE",
            "x": 9,
            "y": 1,
            "d": {
                "rd": 0.75,
                "r": [
                    {
                        "t": "VECTOR",
                        "a": 50
                    },
                    {
                        "t": "MATRIX",
                        "a": 50
                    }
                ]
            }
        },
        {
            "type": "SOURCE",
            "y": 2,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "TENSOR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "PLATFORM",
            "x": 2,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 2
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 2
        },
        {
            "type": "PLATFORM",
            "x": 8,
            "y": 2,
            "d": {
                "bt": "PWR_MULTIPLIER",
                "bl": 2
            }
        },
        {
            "type": "SOURCE",
            "x": 1,
            "y": 3,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 20
                    },
                    {
                        "t": "VECTOR",
                        "a": 30
                    },
                    {
                        "t": "MATRIX",
                        "a": 40
                    },
                    {
                        "t": "TENSOR",
                        "a": 10
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 3
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 3
        },
        {
            "type": "PLATFORM",
            "x": 4,
            "y": 3
        },
        {
            "type": "TARGET",
            "x": 5,
            "y": 3,
            "d": {
                "da": false,
                "usgv": false,
                "gv": []
            }
        },
        {
            "type": "PLATFORM",
            "x": 6,
            "y": 3,
            "d": {
                "bt": "ATTACK_SPEED",
                "bl": 1
            }
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 3
        },
        {
            "type": "ROAD",
            "x": 8,
            "y": 3
        },
        {
            "type": "ROAD",
            "x": 1,
            "y": 4
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 4
        },
        {
            "type": "PLATFORM",
            "x": 3,
            "y": 4,
            "d": {
                "bt": "BONUS_EXPERIENCE",
                "bl": 1
            }
        },
        {
            "type": "XM_MUSIC_TRACK",
            "x": 4,
            "y": 4,
            "d": {
                "id": 6674707944215815447,
                "track": "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"
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 4
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 4
        },
        {
            "type": "PLATFORM",
            "x": 7,
            "y": 4
        },
        {
            "type": "ROAD",
            "x": 8,
            "y": 4
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 4
        },
        {
            "type": "PLATFORM",
            "y": 5,
            "d": {
                "bt": "BONUS_COINS",
                "bl": 3
            }
        },
        {
            "type": "ROAD",
            "x": 1,
            "y": 5
        },
        {
            "type": "PLATFORM",
            "x": 2,
            "y": 5,
            "d": {
                "bt": "PROJECTILE_SPEED",
                "bl": 3
            }
        },
        {
            "type": "SPAWN",
            "x": 3,
            "y": 5,
            "d": {
                "d": 135,
                "ae": [
                    {
                        "t": "FAST",
                        "f": 1,
                        "l": 50
                    },
                    {
                        "t": "ARMORED",
                        "f": 10,
                        "l": 0
                    },
                    {
                        "t": "BOSS",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "REGULAR",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "STRONG",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "HEALER",
                        "f": 1,
                        "l": 0
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 5
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 5,
            "d": {
                "bt": "ROTATION_SPEED",
                "bl": 5
            }
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 5
        },
        {
            "type": "PLATFORM",
            "x": 8,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 5
        },
        {
            "type": "PLATFORM",
            "x": 10,
            "y": 5,
            "d": {
                "bt": "ATTACK_SPEED",
                "bl": 1
            }
        },
        {
            "type": "ROAD",
            "x": 1,
            "y": 6
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 6
        },
        {
            "type": "PLATFORM",
            "x": 3,
            "y": 6
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 6
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 6
        },
        {
            "type": "PLATFORM",
            "x": 6,
            "y": 6,
            "d": {
                "bt": "SELL_REFUND",
                "bl": 5
            }
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 6
        },
        {
            "type": "ROAD",
            "x": 8,
            "y": 6
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 6
        },
        {
            "type": "SOURCE",
            "x": 1,
            "y": 7,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 25
                    },
                    {
                        "t": "MATRIX",
                        "a": 50
                    },
                    {
                        "t": "TENSOR",
                        "a": 25
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 7
        },
        {
            "type": "PLATFORM",
            "x": 4,
            "y": 7,
            "d": {
                "bt": "ATTACK_SPEED",
                "bl": 1
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 7
        },
        {
            "type": "PLATFORM",
            "x": 7,
            "y": 7,
            "d": {
                "bt": "DAMAGE",
                "bl": 1
            }
        },
        {
            "type": "PLATFORM",
            "x": 8,
            "y": 7
        },
        {
            "type": "SOURCE",
            "x": 10,
            "y": 7,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "TENSOR",
                        "a": 75
                    },
                    {
                        "t": "INFIAR",
                        "a": 25
                    }
                ]
            }
        },
        {
            "type": "SOURCE",
            "x": 1,
            "y": 8,
            "d": {
                "rd": 0.75,
                "r": [
                    {
                        "t": "MATRIX",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "PLATFORM",
            "x": 2,
            "y": 8,
            "d": {
                "bt": "DAMAGE",
                "bl": 4
            }
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 8
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 8
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 8
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 8
        },
        {
            "type": "PLATFORM",
            "x": 7,
            "y": 8,
            "d": {
                "bt": "PWR_MULTIPLIER",
                "bl": 3
            }
        },
        {
            "type": "BOSS",
            "x": 8,
            "y": 8,
            "d": {
                "btt": "CUSTOM",
                "ce": [],
                "cbwc": {
                    "cl": 50,
                    "rc": 1,
                    "sd": 0,
                    "bwp": [
                        {
                            "w": 50,
                            "bt": "CONSTRUCTOR"
                        }
                    ]
                }
            }
        },
        {
            "type": "SOURCE",
            "x": 9,
            "y": 8,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 40
                    },
                    {
                        "t": "MATRIX",
                        "a": 40
                    },
                    {
                        "t": "INFIAR",
                        "a": 20
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 9
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 9
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 9
        },
        {
            "type": "PLATFORM",
            "x": 9,
            "y": 9,
            "d": {
                "bt": "PROJECTILE_SPEED",
                "bl": 3
            }
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 10,
            "d": {
                "bt": "PROJECTILE_SPEED",
                "bl": 1
            }
        },
        {
            "type": "PLATFORM",
            "x": 9,
            "y": 10,
            "d": {
                "bt": "RANGE",
                "bl": 3
            }
        }
    ],
    "gates": []
}