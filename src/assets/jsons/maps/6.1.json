{
    "width": 17,
    "height": 17,
    "tiles": [
        {
            "type": "DUMMY",
            "x": 7,
            "d": {
                "id": 6931005360160033269,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 5,
            "y": 1,
            "d": {
                "id": 6931005359207676515,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 6,
            "y": 1,
            "d": {
                "id": 6931005358664786750,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "XM_MUSIC_TRACK",
            "x": 8,
            "y": 2,
            "d": {
                "id": 6930586334278337075,
                "track": ""
            }
        },
        {
            "type": "DUMMY",
            "x": 11,
            "y": 2,
            "d": {
                "id": 6931005360231502619,
                "d": {
                    "iBounty": 0,
                    "iHp": 500000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.GAME_VALUE:create(enums.GameValueType.COINS_GENERATION, 180)\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 2000,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-globe",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "e0e0e0ff"
            }
        },
        {
            "type": "SOURCE",
            "x": 2,
            "y": 3,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "INFIAR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "GAME_VALUE",
            "x": 8,
            "y": 3,
            "d": {
                "gv": "WAVE_INTERVAL",
                "d": 5,
                "o": 1
            }
        },
        {
            "type": "DUMMY",
            "x": 10,
            "y": 3,
            "d": {
                "id": 6931005358526222848,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.ROTATION_SPEED\ntile.bonusLevel = 5\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "c": "00acc1ff"
            }
        },
        {
            "type": "SOURCE",
            "x": 8,
            "y": 4,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "MATRIX",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 4
        },
        {
            "type": "ROAD",
            "x": 10,
            "y": 4
        },
        {
            "type": "ROAD",
            "x": 11,
            "y": 4
        },
        {
            "type": "DUMMY",
            "x": 2,
            "y": 5,
            "d": {
                "id": 6931005358268200602,
                "d": {
                    "iBounty": 0,
                    "iHp": 700000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.GAME_VALUE:create(enums.GameValueType.WAVE_INTERVAL, 5)\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 2000,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-globe",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "e0e0e0ff"
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 5
        },
        {
            "type": "PLATFORM",
            "x": 8,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 5
        },
        {
            "type": "DUMMY",
            "x": 10,
            "y": 5,
            "d": {
                "id": 6931005357756146725,
                "d": {
                    "iBounty": 1000,
                    "iHp": 150000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1500)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "square",
                    "iXp": 250
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "fdd835ff"
            }
        },
        {
            "type": "ROAD",
            "x": 11,
            "y": 5
        },
        {
            "type": "DUMMY",
            "x": 15,
            "y": 5,
            "d": {
                "id": 6931005357607171894,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 3,
            "y": 6,
            "d": {
                "id": 6931005359064291928,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.ROTATION_SPEED\ntile.bonusLevel = 5\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "c": "00acc1ff"
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 6
        },
        {
            "type": "DUMMY",
            "x": 5,
            "y": 6,
            "d": {
                "id": 6931005357756146725,
                "d": {
                    "iBounty": 1000,
                    "iHp": 150000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1500)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "square",
                    "iXp": 250
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "fdd835ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 6,
            "y": 6,
            "d": {
                "id": 6931005360442737814,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 6
        },
        {
            "type": "DUMMY",
            "x": 8,
            "y": 6,
            "d": {
                "id": 6931005357924561346,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 10,
            "y": 6,
            "d": {
                "id": 6931005358474132171,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "ROAD",
            "x": 11,
            "y": 6
        },
        {
            "type": "DUMMY",
            "x": 15,
            "y": 6,
            "d": {
                "id": 6931005358568454594,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 7
        },
        {
            "type": "SPAWN",
            "x": 7,
            "y": 7,
            "d": {
                "d": 190,
                "ae": [
                    {
                        "t": "REGULAR",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "HELI",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "JET",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "ARMORED",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "TOXIC",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "FIGHTER",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "BOSS",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "STRONG",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "FAST",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "HEALER",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "ICY",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "LIGHT",
                        "f": 1,
                        "l": 0
                    }
                ]
            }
        },
        {
            "type": "DUMMY",
            "x": 8,
            "y": 7,
            "d": {
                "id": 6931005357300303661,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.PWR_MULTIPLIER\ntile.bonusLevel = 2\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "673ab7ff"
            }
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 10,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 11,
            "y": 7
        },
        {
            "type": "DUMMY",
            "x": 16,
            "y": 7,
            "d": {
                "id": 6931005359759138780,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "SOURCE",
            "x": 4,
            "y": 8,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 8
        },
        {
            "type": "DUMMY",
            "x": 6,
            "y": 8,
            "d": {
                "id": 6931005357318318344,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 7,
            "y": 8,
            "d": {
                "id": 6931005361367325390,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.ATTACK_SPEED\ntile.bonusLevel = 2\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "673ab7ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 8,
            "y": 8,
            "d": {
                "id": 6931005358445529967,
                "d": {
                    "iBounty": 1000,
                    "iHp": 300000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.CORE:create()\ntile.predefinedType = enums.PredefinedCoreTileType.ZETA\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 2000,
                    "sGemShape": "pentagon",
                    "iXp": 200
                },
                "i": "icon-globe",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "e91e63ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 9,
            "y": 8,
            "d": {
                "id": 6931005358897260845,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.ATTACK_SPEED\ntile.bonusLevel = 2\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "673ab7ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 10,
            "y": 8,
            "d": {
                "id": 6931005357746878082,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "PLATFORM",
            "x": 11,
            "y": 8
        },
        {
            "type": "SOURCE",
            "x": 12,
            "y": 8,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "TENSOR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "DUMMY",
            "y": 9,
            "d": {
                "id": 6931005358687191036,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 9
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 9
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 9
        },
        {
            "type": "DUMMY",
            "x": 8,
            "y": 9,
            "d": {
                "id": 6931005360802253155,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.PWR_MULTIPLIER\ntile.bonusLevel = 2\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "673ab7ff"
            }
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 9
        },
        {
            "type": "ROAD",
            "x": 11,
            "y": 9
        },
        {
            "type": "ROAD",
            "x": 12,
            "y": 9
        },
        {
            "type": "DUMMY",
            "x": 1,
            "y": 10,
            "d": {
                "id": 6931005361491069832,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 10
        },
        {
            "type": "DUMMY",
            "x": 6,
            "y": 10,
            "d": {
                "id": 6931005359511345772,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 8,
            "y": 10,
            "d": {
                "id": 6931005358246666736,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 10
        },
        {
            "type": "DUMMY",
            "x": 10,
            "y": 10,
            "d": {
                "id": 6931005359918954037,
                "d": {
                    "iBounty": 50,
                    "iHp": 20000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "039be5ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 11,
            "y": 10,
            "d": {
                "id": 6931005357756146725,
                "d": {
                    "iBounty": 1000,
                    "iHp": 150000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1500)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "square",
                    "iXp": 250
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "fdd835ff"
            }
        },
        {
            "type": "ROAD",
            "x": 12,
            "y": 10
        },
        {
            "type": "DUMMY",
            "x": 13,
            "y": 10,
            "d": {
                "id": 6931005361043101484,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.ROTATION_SPEED\ntile.bonusLevel = 5\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "c": "00acc1ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 1,
            "y": 11,
            "d": {
                "id": 6931005359171608922,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 11
        },
        {
            "type": "DUMMY",
            "x": 6,
            "y": 11,
            "d": {
                "id": 6931005357756146725,
                "d": {
                    "iBounty": 1000,
                    "iHp": 150000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1500)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "square",
                    "iXp": 250
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "fdd835ff"
            }
        },
        {
            "type": "TARGET",
            "x": 7,
            "y": 11,
            "d": {
                "da": false,
                "usgv": false,
                "gv": []
            }
        },
        {
            "type": "PLATFORM",
            "x": 8,
            "y": 11
        },
        {
            "type": "ROAD",
            "x": 9,
            "y": 11
        },
        {
            "type": "ROAD",
            "x": 10,
            "y": 11
        },
        {
            "type": "ROAD",
            "x": 11,
            "y": 11
        },
        {
            "type": "ROAD",
            "x": 12,
            "y": 11
        },
        {
            "type": "DUMMY",
            "x": 14,
            "y": 11,
            "d": {
                "id": 6931005358104506722,
                "d": {
                    "iBounty": 0,
                    "iHp": 700000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.GAME_VALUE:create(enums.GameValueType.WAVE_INTERVAL, 5)\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 2000,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-globe",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "e0e0e0ff"
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 12
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 12
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 12
        },
        {
            "type": "SOURCE",
            "x": 8,
            "y": 12,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "VECTOR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "DUMMY",
            "x": 6,
            "y": 13,
            "d": {
                "id": 6931005357305610052,
                "d": {
                    "iBounty": 50,
                    "iHp": 50000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.PLATFORM:create()\ntile.bonusType = enums.SpaceTileBonusType.ROTATION_SPEED\ntile.bonusLevel = 5\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 300,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-tile",
                "is": 0.75,
                "c": "00acc1ff"
            }
        },
        {
            "type": "SCRIPT",
            "x": 8,
            "y": 13,
            "d": {
                "id": 6898275380121237021,
                "script": "dofile(\"scripts/misc/static-gem-enemies.lua\")\n\naddEventHandler(\"SystemPostSetup\", function()\n    StaticGemEnemies.start()\nend)"
            }
        },
        {
            "type": "SOURCE",
            "x": 14,
            "y": 13,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "INFIAR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "DUMMY",
            "x": 5,
            "y": 14,
            "d": {
                "id": 6931005360997207399,
                "d": {
                    "iBounty": 0,
                    "iHp": 500000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal tile = managers.TileManager.F.GAME_VALUE:create(enums.GameValueType.COINS_GENERATION, 180)\nSP.map:setTile(gem.x, gem.y, tile)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 2000,
                    "sGemShape": "square",
                    "iXp": 200
                },
                "i": "icon-globe",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "e0e0e0ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 10,
            "y": 15,
            "d": {
                "id": 6931005357973326696,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 11,
            "y": 15,
            "d": {
                "id": 6931005359145375380,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        },
        {
            "type": "DUMMY",
            "x": 9,
            "y": 16,
            "d": {
                "id": 6931005358258336244,
                "d": {
                    "iBounty": 700,
                    "iHp": 100000,
                    "SAction": "local gem, enemy, tower, damageType, fromAbility = ...\nlocal gpItem = bind(\"Item\").D.GREEN_PAPER\nlocal stack = luajava.newInstance(GNS .. \"ItemStack\", gpItem, 1000)\nlocal v2 = luajava.newInstance(GDXNS .. \"math.Vector2\")\nv2:set(gem.enemy:getPosition())\nif SP._input ~= nil then SP._input.cameraController:mapToStage(v2) end\nSP.gameState:addLootIssuedPrizes(stack, v2.x, v2.y, 2)",
                    "sType": "staticGemEnemy",
                    "SEnemyModifiers": "local enemy, gem, tile = ...\n",
                    "iScore": 1000,
                    "sGemShape": "triangle",
                    "iXp": 200
                },
                "i": "icon-coins",
                "is": 0.75,
                "dsc": "Weak, gives 500 coins and green papers",
                "c": "ffb300ff"
            }
        }
    ],
    "gates": [
        {
            "type": "TELEPORT",
            "x": 9,
            "y": 6,
            "side": "BOTTOM",
            "index": 0
        },
        {
            "type": "TELEPORT",
            "x": 6,
            "y": 7,
            "side": "LEFT",
            "index": 14
        },
        {
            "type": "TELEPORT",
            "x": 9,
            "y": 7,
            "side": "LEFT",
            "index": 14
        },
        {
            "type": "TELEPORT",
            "x": 8,
            "y": 9,
            "side": "LEFT",
            "index": 4
        },
        {
            "type": "TELEPORT",
            "x": 9,
            "y": 9,
            "side": "BOTTOM",
            "index": 0
        },
        {
            "type": "TELEPORT",
            "x": 11,
            "y": 9,
            "side": "LEFT",
            "index": 4
        }
    ]
}