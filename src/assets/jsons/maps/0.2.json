{
    "width": 9,
    "height": 2,
    "tiles": [
        {
            "type": "SPAWN",
            "d": {
                "d": 100,
                "ae": [
                    {
                        "t": "REGULAR",
                        "f": 1,
                        "l": 0
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 1
        },
        {
            "type": "ROAD",
            "x": 2
        },
        {
            "type": "PLATFORM",
            "x": 3
        },
        {
            "type": "PLATFORM",
            "x": 4
        },
        {
            "type": "PLATFORM",
            "x": 5
        },
        {
            "type": "ROAD",
            "x": 6
        },
        {
            "type": "ROAD",
            "x": 7
        },
        {
            "type": "TARGET",
            "x": 8,
            "d": {
                "da": true,
                "usgv": true,
                "gv": [
                    {
                        "t": "STARTING_MONEY",
                        "v": 144,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "GAME_SAVES",
                        "v": 0,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "MANUAL_GAME_SPEED",
                        "v": 0,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "TOWERS_MAX_EXP_LEVEL",
                        "v": 1,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "TOWERS_MAX_UPGRADE_LEVEL",
                        "v": 1,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "TOWER_TYPE_BASIC",
                        "v": 1,
                        "o": true,
                        "b": true
                    }
                ]
            }
        },
        {
            "type": "XM_MUSIC_TRACK",
            "y": 1,
            "d": {
                "id": 2,
                "track": "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"
            }
        },
        {
            "type": "SCRIPT",
            "x": 1,
            "y": 1,
            "d": {
                "id": 6898273827252471582,
                "script": "--[[\r\n0.2\r\nI18nGenerator {\r\n    \"tut_02_010_010_you_can_view\",\r\n    \"tut_02_010_020_tap_on_portal\",\r\n    \"tut_02_020_010_small_enemy_icons\",\r\n    \"tut_02_020_020_looks_like_a_large\",\r\n    \"tut_02_020_030_build_maximum\",\r\n    \"tut_02_020_040_build_towers\",\r\n    \"tut_02_030_010_that_should_do\",\r\n    \"tut_02_030_020_protect_from\",\r\n    \"tut_02_040_010_well_done\",\r\n    \"tut_02_040_020_you_coped_with\",\r\n    \"tut_02_040_030_currently_theres\",\r\n    \"tut_02_040_040_upgrade_any_tower\",\r\n    \"tut_02_050_010_now_this_tower\",\r\n    \"tut_02_050_020_there_are_two\",\r\n    \"tut_02_050_030_lets_make_it\",\r\n    \"tut_02_050_040_set_strongest\",\r\n    \"tut_02_060_010_protect_from\",\r\n    \"tut_02_070_010_you_can_see\",\r\n    \"tut_02_070_020_turn_on_detailed\",\r\n    \"tut_02_080_010_you_can_turn_off\",\r\n    \"tut_02_080_020_now_upgrade\",\r\n    \"tut_02_080_030_defeat_third\",\r\n    \"tut_02_080_040_upgrade_towers\"\r\n}\r\n--]]\r\n\r\ndofile(\"scripts/utils/binder.lua\")\r\ndofile(\"scripts/utils/tutorial.lua\")\r\n\r\nlocal TAG = \"0.2.lua: \"\r\n\r\nlocal i18n = function() return managers.LocaleManager.i18n end\r\nlocal sm = function() return SP._graphics.storylineMessages end\r\nlocal ql = function() return SP._graphics.questList end\r\n\r\nlocal questListItem\r\nlocal s4_sideMenuWasOffscreen\r\nlocal s5_sideMenuWasOffscreen\r\nlocal s5_lastSelectedTower\r\n\r\nlocal tut\r\n\r\nlog(TAG .. \"Level 0.2 script was successfully loaded\")\r\n\r\n----------------------------------------------------------------------------------------------------\r\n\r\naddEventHandler(\"SystemPostSetup\", function()\r\n    -- Setting initial state\r\n    SP._input:setHotKeysEnabled(false)\r\n    SP._graphics.mainUi:hideNextWaveButton()\r\n    SP._graphics.mainUi:hideDrawModeButton()\r\n    SP.achievement:setEnabled(false)\r\n    managers.UiManager:findActor(\"build_menu_modifiers_tab_button\"):setVisible(false)\r\n    managers.UiManager:findActor(\"build_menu_default_aim_strategy\"):setVisible(false)\r\n    managers.UiManager:findActor(\"tower_menu_abilities\"):setVisible(false)\r\n    managers.UiManager:findActor(\"tower_menu_upgrade\"):setVisible(false)\r\n    managers.UiManager:findActor(\"tower_menu_aim_strategy\"):setVisible(false)\r\n    managers.UiManager:findActor(\"tower_menu_sell_button\"):setVisible(false)\r\n    SP._graphics.mainUi:showMessagesButton(false, nil)\r\n    SP._graphics.towerMenu:hideTowerExperience()\r\n\r\n    tut:start()\r\n\r\n    -- Listening to changes\r\n    SP.gameState.listeners:add(luajava.createProxy(GNS .. \"systems.GameStateSystem$GameStateSystemListener\", {\r\n        realUpdate = function(deltaTime)\r\n            tut:update(deltaTime)\r\n        end,\r\n\r\n        affectsGameState = function() return false end\r\n    }))\r\n\r\n    log(TAG .. \"Started\")\r\nend)\r\n\r\ntut = tutorial:new({\r\n    {-- \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0432\u043e\u043b\u043d \u0432\u0440\u0430\u0433\u043e\u0432\r\n        check = function()\r\n            return SP.map:getSelectedTile() ~= nil and SP.map:getSelectedTile().type == enums.TileType.SPAWN\r\n        end,\r\n        start = function()\r\n            log(\"Stage 1 start\")\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_010_010_you_can_view\")\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 1 sm continue\")\r\n\r\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n                    questListItem = ql():addQuestListItem()\r\n                    questListItem:setText(i18n():get(\"tut_02_010_020_tap_on_portal\"))\r\n\r\n                    -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u043f\u0430\u0432\u043d\r\n                    SP.map:removeHighlights()\r\n                    SP.map:highlightTile(SP.map:getMap().spawnTiles:get(0))\r\n                end\r\n            }))\r\n        end,\r\n        done = function() -- \u0412\u044b\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0440\u0442\u0430\u043b\r\n            log(\"Stage 1 done\")\r\n\r\n            SP.map:removeHighlights()\r\n            SP.gameState:addCompletedQuest(\"Q:0.2:1\")\r\n\r\n            questListItem:setCompleted(true)\r\n            tut:delay(2, function()\r\n                ql():removeQuestListItem(questListItem)\r\n\r\n                tut:startNextStage()\r\n            end)\r\n        end\r\n    },\r\n    {-- \u041f\u043e\u043b\u043e\u0441\u043a\u0438 \u043f\u0443\u0442\u0435\u0439 \u0432\u0440\u0430\u0433\u043e\u0432, \u0441\u0442\u0440\u043e\u0438\u043c 3 \u0431\u0430\u0448\u043d\u0438\r\n        check = function()\r\n            return false\r\n        end,\r\n        start = function()\r\n            log(\"Stage 2 start\")\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_020_010_small_enemy_icons\"),\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 2 sm continue\")\r\n\r\n                    -- \u0427\u0435\u0440\u0435\u0437 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0432\u043e\u0440\u0438\u043c \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c 3 \u0431\u0430\u0448\u043d\u0438\r\n                    tut:delay(1, function()\r\n                        sm():queue({\r\n                            tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_020_020_looks_like_a_large\"),\r\n                            tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_020_030_build_maximum\")\r\n                        })\r\n                        sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                            run = function()\r\n                                -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n                                local lastTowersCount = -1\r\n                                local quest\r\n                                quest = luajava.createProxy(GNS .. \"systems.QuestSystem$Quest\", {\r\n                                    getTitle = function()\r\n                                        return \"\"\r\n                                    end,\r\n\r\n                                    update = function()\r\n                                        local towersCount = SP.tower.towers.size\r\n                                        if towersCount ~= lastTowersCount then\r\n                                            SP._quest:getListItem(quest):setText(i18n():get(\"tut_02_020_040_build_towers\") .. \" \" .. towersCount .. \" / 3\")\r\n                                            lastTowersCount = towersCount\r\n                                        end\r\n                                    end,\r\n\r\n                                    isCompleted = function()\r\n                                        return SP.tower.towers.size >= 3\r\n                                    end,\r\n\r\n                                    onCompletion = function()\r\n                                        local qli = SP._quest:getListItem(quest)\r\n                                        qli:setCompleted(true)\r\n\r\n                                        tut:delay(1, function()\r\n                                            ql():removeQuestListItem(qli)\r\n\r\n                                            tut:startNextStage()\r\n                                        end)\r\n                                    end\r\n                                })\r\n                                SP._quest:addQuest(quest)\r\n                            end\r\n                        }))\r\n                    end)\r\n                end\r\n            }))\r\n        end,\r\n        done = function() end\r\n    },\r\n    {-- \u0412\u044b\u0437\u043e\u0432 \u0432\u043e\u043b\u043d \u0432\u0440\u0430\u0433\u043e\u0432\r\n        check = function()\r\n            if SP.wave.wave ~= nil and not (SP.wave.status == bind(\"systems.WaveSystem$Status\").SPAWNING and SP.wave.wave.waveNumber == 1) then\r\n                -- \u0412\u043e\u043b\u043d\u044b \u043d\u0430\u0447\u0430\u043b\u0438\u0441\u044c \u0438 \u043f\u0435\u0440\u0432\u0430\u044f \u0432\u043e\u043b\u043d\u0430 \u0437\u0430\u0441\u043f\u0430\u0432\u043d\u0438\u043b\u0430\u0441\u044c, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0440\u0430\u0433\u043e\u0432 \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0432\u043e\u043b\u043d\u044b \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c\r\n                return SP.map:getSpawnedEnemiesCountByWave(1) == 0\r\n            end\r\n\r\n            return false\r\n        end,\r\n        start = function()\r\n            log(\"Stage 3 start\")\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_030_010_that_should_do\")\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 3 sm continue\")\r\n\r\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n                    questListItem = ql():addQuestListItem()\r\n                    questListItem:setText(i18n():get(\"tut_02_030_020_protect_from\"))\r\n\r\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u043e\u043b\u043d\u044b\r\n                    SP._graphics.mainUi:showNextWaveButton(false, nil)\r\n\r\n                    -- \u0415\u0441\u043b\u0438 \u0432\u043e\u043b\u043d\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c, \u0441\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443\r\n                    tut:condition(function() return SP.wave.wave ~= nil end, function()\r\n                        SP._graphics.mainUi:hideNextWaveButton()\r\n                    end)\r\n                end\r\n            }))\r\n        end,\r\n        done = function() -- \u0412\u044b\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0440\u0442\u0430\u043b\r\n            log(\"Stage 3 done\")\r\n\r\n            questListItem:setCompleted(true)\r\n            tut:delay(1, function()\r\n                ql():removeQuestListItem(questListItem)\r\n\r\n                tut:startNextStage()\r\n            end)\r\n        end\r\n    },\r\n    {-- \u0423\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0431\u0430\u0448\u043d\u044e\r\n        check = function()\r\n            local anythindUpgraded = false\r\n            for i = 1, SP.tower.towers.size do\r\n                local tower = SP.tower.towers:get(i - 1)\r\n                if tower:getUpgradeLevel() > 0 then\r\n                    anythindUpgraded = true\r\n                    break\r\n                end\r\n            end\r\n\r\n            return anythindUpgraded\r\n        end,\r\n        update = function()\r\n            local sideMenuOffscreen = SP._graphics.sideMenu:isOffscreen()\r\n            if s4_sideMenuWasOffscreen ~= sideMenuOffscreen then\r\n                -- \u041c\u0435\u043d\u044f\u0435\u043c \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 UI\r\n                managers.UiManager:removeAllHighlights()\r\n\r\n                if sideMenuOffscreen then\r\n                    -- \u041c\u0435\u043d\u044e \u0441\u043a\u0440\u044b\u0442\u043e - \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u043c\u0435\u043d\u044e\r\n                    managers.UiManager:addHighlight(managers.UiManager:findActor(\"side_menu_toggle_button\"))\r\n                else\r\n                    -- \u041c\u0435\u043d\u044e \u043e\u0442\u043a\u0440\u044b\u0442\u043e, \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f\r\n                    managers.UiManager:addHighlight(managers.UiManager:findActor(\"tower_menu_upgrade_button\"))\r\n                end\r\n                s4_sideMenuWasOffscreen = sideMenuOffscreen\r\n            end\r\n        end,\r\n        start = function()\r\n            log(\"Stage 4 start\")\r\n\r\n            -- \u0421\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u043e\u043b\u043d\u044b\r\n            SP._graphics.mainUi:hideNextWaveButton()\r\n            -- systems.GameStateSystem:setGameSpeed(0)\r\n            SP.wave:freezeTimeToNextWave(9001)\r\n\r\n            -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u043e\u043d\u0435\u0442\u044b, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0445\u0432\u0430\u0442\u0430\u0435\u0442\r\n            if SP.gameState:getMoney() < 25 then\r\n                SP.gameState:setMoney(25)\r\n            end\r\n\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_040_010_well_done\"),\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_040_020_you_coped_with\"),\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_040_030_currently_theres\")\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 4 sm continue\")\r\n\r\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n                    questListItem = ql():addQuestListItem()\r\n                    questListItem:setText(i18n():get(\"tut_02_040_040_upgrade_any_tower\"))\r\n\r\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f\r\n                    managers.UiManager:findActor(\"tower_menu_upgrade\"):setVisible(true)\r\n\r\n                    -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f\r\n                    s4_sideMenuWasOffscreen = not SP._graphics.sideMenu:isOffscreen()\r\n                end\r\n            }))\r\n        end,\r\n        done = function() -- \u0423\u043b\u0443\u0447\u0448\u0438\u043b\u0438 \u0431\u0430\u0448\u043d\u044e\r\n            log(\"Stage 4 done\")\r\n\r\n            questListItem:setCompleted(true)\r\n            managers.UiManager:removeAllHighlights()\r\n            SP.gameState:addCompletedQuest(\"Q:0.2:2\")\r\n\r\n            tut:delay(2, function()\r\n                ql():removeQuestListItem(questListItem)\r\n\r\n                tut:startNextStage()\r\n            end)\r\n        end\r\n    },\r\n    {-- \u0412\u044b\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0436\u0438\u043c \u043f\u0440\u0438\u0446\u0435\u043b\u0438\u0432\u0430\u043d\u0438\u044f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0448\u043d\u0435 \u043d\u0430 \u0441\u0430\u043c\u044b\u0445 \u0441\u0438\u043b\u044c\u043d\u044b\u0445\r\n        check = function()\r\n            --            local upgradesCount = 0\r\n            --            for i = 1, systems.TowerSystem.towers.size do\r\n            --                local tower = systems.TowerSystem.towers:get(i - 1)\r\n            --                upgradesCount = upgradesCount + tower:getUpgradeLevel()\r\n            --            end\r\n            --\r\n            --            return upgradesCount >= 3\r\n            for i = 1, SP.tower.towers.size do\r\n                local tower = SP.tower.towers:get(i - 1)\r\n                if tower:getUpgradeLevel() > 0 and tower.aimStrategy == bind(\"Tower$AimStrategy\").STRONGEST then\r\n                    return true\r\n                end\r\n            end\r\n\r\n            return false\r\n        end,\r\n        update = function()\r\n            local sideMenuOffscreen = SP._graphics.sideMenu:isOffscreen()\r\n            local selectedTile = SP.map:getSelectedTile()\r\n            if s5_sideMenuWasOffscreen ~= sideMenuOffscreen or s5_lastSelectedTower ~= selectedTile then\r\n                -- \u041c\u0435\u043d\u044f\u0435\u043c \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 UI\r\n                managers.UiManager:removeAllHighlights()\r\n\r\n                if selectedTile ~= nil and selectedTile.building ~= nil and selectedTile.building.buildingType == enums.BuildingType.TOWER and selectedTile.building:getUpgradeLevel() > 0 then\r\n                    -- \u0412\u044b\u0431\u0440\u0430\u043d\u0430 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u0430\u044f \u0431\u0430\u0448\u043d\u044f\r\n                    if sideMenuOffscreen then\r\n                        -- \u041c\u0435\u043d\u044e \u0441\u043a\u0440\u044b\u0442\u043e - \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u043c\u0435\u043d\u044e\r\n                        managers.UiManager:addHighlight(managers.UiManager:findActor(\"side_menu_toggle_button\"))\r\n                    else\r\n                        -- \u041c\u0435\u043d\u044e \u043e\u0442\u043a\u0440\u044b\u0442\u043e, \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f\r\n                        managers.UiManager:addHighlight(managers.UiManager:findActor(\"tower_menu_aim_strategy\"))\r\n                    end\r\n                end\r\n                s5_sideMenuWasOffscreen = sideMenuOffscreen\r\n                s5_lastSelectedTower = selectedTile\r\n            end\r\n        end,\r\n        start = function()\r\n            log(\"Stage 5 start\")\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_050_010_now_this_tower\"),\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_050_020_there_are_two\"),\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_050_030_lets_make_it\")\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 5 sm continue\")\r\n\r\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u0438\u0446\u0435\u043b\u0438\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u0443 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0448\u043d\u0438\r\n                    managers.UiManager:findActor(\"build_menu_default_aim_strategy\"):setVisible(true)\r\n                    managers.UiManager:findActor(\"tower_menu_aim_strategy\"):setVisible(true)\r\n\r\n                    s5_sideMenuWasOffscreen = not SP._graphics.sideMenu:isOffscreen()\r\n                    s5_lastSelectedTower = nil\r\n\r\n                    -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u0443\u044e \u0431\u0430\u0448\u043d\u044e\r\n                    for i = 1, SP.tower.towers.size do\r\n                        local tower = SP.tower.towers:get(i - 1)\r\n                        if tower:getUpgradeLevel() > 0 then\r\n                            SP.map:removeHighlights()\r\n                            SP.map:highlightTile(tower:getTile())\r\n                            log(\"Highlighting\")\r\n                            log(tower:getTile())\r\n                            break\r\n                        end\r\n                    end\r\n\r\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n                    questListItem = ql():addQuestListItem()\r\n                    questListItem:setText(i18n():get(\"tut_02_050_040_set_strongest\"))\r\n                end\r\n            }))\r\n        end,\r\n        done = function()\r\n            log(\"Stage 5 done\")\r\n\r\n            SP.map:removeHighlights()\r\n            questListItem:setCompleted(true)\r\n            managers.UiManager:removeAllHighlights()\r\n            tut:delay(2, function()\r\n                ql():removeQuestListItem(questListItem)\r\n\r\n                tut:startNextStage()\r\n            end)\r\n        end\r\n    },\r\n    {-- \u041f\u043e\u0431\u0435\u0434\u0438\u0442\u044c \u0432\u0442\u043e\u0440\u0443\u044e \u0432\u043e\u043b\u043d\u0443\r\n        check = function()\r\n            return SP.wave:getCompletedWavesCount() >= 2\r\n        end,\r\n        start = function()\r\n            log(\"Stage 6 start\")\r\n\r\n            -- \u0423\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0430\u0443\u0437\u0443\r\n            -- systems.GameStateSystem:setGameSpeed(1)\r\n            SP.wave:freezeTimeToNextWave(-1)\r\n\r\n            -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0432\u044b\u0437\u043e\u0432\u0430 \u0432\u043e\u043b\u043d\u044b\r\n            SP._graphics.mainUi:showNextWaveButton(false, nil)\r\n\r\n            -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n            questListItem = ql():addQuestListItem()\r\n            questListItem:setText(i18n():get(\"tut_02_060_010_protect_from\"))\r\n        end,\r\n        done = function()\r\n            log(\"Stage 6 done\")\r\n\r\n            questListItem:setCompleted(true)\r\n            tut:delay(1, function()\r\n                ql():removeQuestListItem(questListItem)\r\n\r\n                SP._mapRendering:setDrawMode(bind(\"systems.MapRenderingSystem$DrawMode\").DEFAULT)\r\n                tut:startNextStage()\r\n            end)\r\n        end\r\n    },\r\n    {-- \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f\r\n        check = function()\r\n            return SP._mapRendering:getDrawMode() == bind(\"systems.MapRenderingSystem$DrawMode\").DETAILED\r\n        end,\r\n        start = function()\r\n            log(\"Stage 7 start\")\r\n\r\n            -- \u0421\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u043e\u043b\u043d\u044b \u0438 \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0438\u0433\u0440\u0443\r\n            SP._graphics.mainUi:hideNextWaveButton()\r\n            -- systems.GameStateSystem:setGameSpeed(0)\r\n            SP.wave:freezeTimeToNextWave(9001)\r\n\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_070_010_you_can_see\")\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 7 sm continue\")\r\n\r\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0440\u0435\u0436\u0438\u043c\u0430 \u043e\u0442\u0440\u0438\u0441\u043e\u0432\u043a\u0438\r\n                    SP._graphics.mainUi:showDrawModeButton(true, luajava.createProxy(\"java.lang.Runnable\", {\r\n                        run = function()\r\n                            -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\r\n                            questListItem = ql():addQuestListItem()\r\n                            questListItem:setText(i18n():get(\"tut_02_070_020_turn_on_detailed\"))\r\n                        end\r\n                    }))\r\n                end\r\n            }))\r\n        end,\r\n        done = function()\r\n            log(\"Stage 6 done\")\r\n\r\n            questListItem:setCompleted(true)\r\n            SP.gameState:addCompletedQuest(\"Q:0.2:3\")\r\n\r\n            tut:delay(1, function()\r\n                ql():removeQuestListItem(questListItem)\r\n\r\n                tut:startNextStage()\r\n            end)\r\n        end\r\n    },\r\n    {-- \u041f\u043e\u0431\u0435\u0434\u0438\u0442\u044c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u043b\u043d\u044b\r\n        check = function()\r\n            return false\r\n        end,\r\n        start = function()\r\n            log(\"Stage 8 start\")\r\n\r\n            sm():queue({\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_080_010_you_can_turn_off\"),\r\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_02_080_020_now_upgrade\")\r\n            })\r\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\r\n                run = function()\r\n                    log(\"Stage 7 sm continue\")\r\n\r\n                    -- \u0423\u0431\u0435\u0440\u0435\u043c \u043f\u0430\u0443\u0437\u0443\r\n                    SP._graphics.mainUi:showNextWaveButton(false, nil)\r\n                    -- systems.GameStateSystem:setGameSpeed(1)\r\n                    SP.wave:freezeTimeToNextWave(-1)\r\n\r\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\u044b (\u043f\u043e\u0431\u0435\u0434\u0438\u0442\u044c 3 \u0432\u043e\u043b\u043d\u0443, \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0431\u0430\u0437\u044b)\r\n                    local questA\r\n                    questA = luajava.createProxy(GNS .. \"systems.QuestSystem$Quest\", {\r\n                        getTitle = function()\r\n                            return i18n():get(\"tut_02_080_030_defeat_third\")\r\n                        end,\r\n\r\n                        update = function() end,\r\n\r\n                        isCompleted = function()\r\n                            return SP.wave.wave ~= nil and SP.wave.wave.waveNumber > 3\r\n                        end,\r\n\r\n                        onCompletion = function()\r\n                            SP._quest:getListItem(questA):setCompleted(true)\r\n                        end\r\n                    })\r\n                    SP._quest:addQuest(questA)\r\n\r\n                    local getUpgradedTowersCount = function()\r\n                        local cnt = 0\r\n                        for i = 1, SP.tower.towers.size do\r\n                            local tower = SP.tower.towers:get(i - 1)\r\n                            if tower:getUpgradeLevel() > 0 then\r\n                                cnt = cnt + 1\r\n                            end\r\n                        end\r\n\r\n                        return cnt\r\n                    end\r\n\r\n                    local questBlastTowersCount\r\n                    local questB\r\n                    questB = luajava.createProxy(GNS .. \"systems.QuestSystem$Quest\", {\r\n                        getTitle = function()\r\n                            return \"\"\r\n                        end,\r\n\r\n                        update = function()\r\n                            local towersCount = getUpgradedTowersCount()\r\n                            if towersCount ~= questBlastTowersCount then\r\n                                SP._quest:getListItem(questB):setText(i18n():get(\"tut_02_080_040_upgrade_towers\") .. \" \" .. towersCount .. \" / 3\")\r\n                                questBlastTowersCount = towersCount\r\n                            end\r\n                        end,\r\n\r\n                        isCompleted = function()\r\n                            return getUpgradedTowersCount() >= 3\r\n                        end,\r\n\r\n                        onCompletion = function()\r\n                            SP._quest:getListItem(questB):setCompleted(true)\r\n                        end\r\n                    })\r\n                    SP._quest:addQuest(questB)\r\n                end\r\n            }))\r\n        end,\r\n        done = function() end\r\n    }\r\n})"
            }
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 1
        },
        {
            "type": "SOURCE",
            "x": 7,
            "y": 1,
            "d": {
                "rd": 0.2,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 100
                    }
                ]
            }
        }
    ],
    "gates": []
}