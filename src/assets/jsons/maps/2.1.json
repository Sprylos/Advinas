{
    "width": 8,
    "height": 8,
    "tiles": [
        {
            "type": "ROAD"
        },
        {
            "type": "PLATFORM",
            "x": 1
        },
        {
            "type": "PLATFORM",
            "x": 2
        },
        {
            "type": "SOURCE",
            "x": 3,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "MATRIX",
                        "a": 50
                    },
                    {
                        "t": "INFIAR",
                        "a": 50
                    }
                ]
            }
        },
        {
            "type": "SOURCE",
            "x": 4,
            "d": {
                "rd": 0.5,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 75
                    },
                    {
                        "t": "VECTOR",
                        "a": 25
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 5
        },
        {
            "type": "ROAD",
            "x": 6
        },
        {
            "type": "ROAD",
            "x": 7
        },
        {
            "type": "ROAD",
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 1,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 1
        },
        {
            "type": "PLATFORM",
            "x": 6,
            "y": 1,
            "d": {
                "bt": "PROJECTILE_SPEED",
                "bl": 5
            }
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 1
        },
        {
            "type": "SOURCE",
            "x": 1,
            "y": 2,
            "d": {
                "rd": 0.75,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 25
                    },
                    {
                        "t": "VECTOR",
                        "a": 50
                    },
                    {
                        "t": "MATRIX",
                        "a": 25
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 2
        },
        {
            "type": "PLATFORM",
            "x": 3,
            "y": 2
        },
        {
            "type": "PLATFORM",
            "x": 4,
            "y": 2
        },
        {
            "type": "PLATFORM",
            "x": 6,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 2
        },
        {
            "type": "XM_MUSIC_TRACK",
            "x": 1,
            "y": 3,
            "d": {
                "id": 6676427618314090994,
                "track": "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"
            }
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 3
        },
        {
            "type": "PLATFORM",
            "x": 3,
            "y": 3
        },
        {
            "type": "SPAWN",
            "x": 4,
            "y": 3,
            "d": {
                "d": 100,
                "ae": [
                    {
                        "t": "REGULAR",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "FAST",
                        "f": 1,
                        "l": 0
                    },
                    {
                        "t": "STRONG",
                        "f": 1,
                        "l": 0
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 3
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 3
        },
        {
            "type": "ROAD",
            "x": 7,
            "y": 3
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 4
        },
        {
            "type": "PLATFORM",
            "x": 3,
            "y": 4
        },
        {
            "type": "SOURCE",
            "x": 5,
            "y": 4,
            "d": {
                "rd": 0.75,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 100
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 4
        },
        {
            "type": "SOURCE",
            "x": 7,
            "y": 4,
            "d": {
                "rd": 0.5,
                "r": [
                    {
                        "t": "SCALAR",
                        "a": 67
                    },
                    {
                        "t": "VECTOR",
                        "a": 33
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 5
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 5
        },
        {
            "type": "TARGET",
            "x": 4,
            "y": 5,
            "d": {
                "da": false,
                "usgv": false,
                "gv": []
            }
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 5,
            "d": {
                "bt": "PWR_MULTIPLIER",
                "bl": 2
            }
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 5
        },
        {
            "type": "SCRIPT",
            "x": 4,
            "y": 6,
            "d": {
                "id": 6898275380356780135,
                "script": "--[[\n2.1\nI18nGenerator {\n    \"lvlsub_2_1_010_stage_two_permissions\",\n    \"lvlsub_2_1_020_as_i_said_i_got_access\",\n    \"lvlsub_2_1_030_once_i_was_wandering\",\n    \"lvlsub_2_1_040_now_i_can_open_them\",\n    \"lvlsub_2_1_050_someone_switched_off\",\n    \"lvlsub_2_1_060_youll_find_button\",\n    \"lvlsub_2_1_070_did_you_notice\",\n    \"lvlsub_2_1_080_use_researches\",\n    \"lvlsub_2_1_090_never_mind\"\n}\n--]]\nSP.script:disableScriptsSerialization()\n\nif SP._graphics ~= nil and not SP.state.gameIsContinued then\n    dofile(\"scripts/utils/tutorial.lua\")\n\n    local i18n = function() return managers.LocaleManager.i18n end\n    local sm = function() return SP._graphics.storylineMessages end\n    local st = function() return SP._graphics.subtitles end\n\n    local forceSubtitles = false\n\n    local tut\n\n    addEventHandler(\"SystemPostSetup\", function()\n        forceSubtitles = managers.BasicLevelManager:getLevel(\"2.1\").gameStartsCount > 1 or SP.gameState.gameIsContinued\n        tut:start()\n\n        SP.gameState.listeners:add(luajava.createProxy(GNS .. \"systems.GameStateSystem$GameStateSystemListener\", {\n            realUpdate = function(deltaTime)\n                tut:update(deltaTime)\n            end,\n\n            affectsGameState = function() return false end\n        }))\n    end)\n\n    tut = tutorial:new({\n        {\n            check = function()\n                return SP.wave:getCompletedWavesCount() >= 10\n            end,\n            start = function()\n                local messages = {\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_010_stage_two_permissions\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_020_as_i_said_i_got_access\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_030_once_i_was_wandering\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_040_now_i_can_open_them\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_050_someone_switched_off\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_060_youll_find_button\")\n                }\n                if forceSubtitles then\n                    st():schedule(messages, 2, 6)\n                else\n                    tut:delay(2, function()\n                        sm():queue(messages)\n                    end)\n                end\n            end,\n            done = function()\n                local messages = {\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_070_did_you_notice\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_080_use_researches\")\n                }\n                local postMessages = {\n                    tut.ENSOR_TAG .. \" ACCESS ERROR \\\\\\\\dc0f0009 INVALID PROTOCOL\",\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"lvlsub_2_1_090_never_mind\")\n                }\n\n                if forceSubtitles then\n                    st():schedule(messages, 0, 5)\n                    st():schedule(postMessages, 15, 2)\n                else\n                    sm():queue(messages)\n                    sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                        run = function()\n                            st():schedule(postMessages, 10, 2)\n                        end\n                    }))\n                end\n            end\n        }\n    })\nend"
            }
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 6
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 6
        },
        {
            "type": "SOURCE",
            "x": 3,
            "y": 7,
            "d": {
                "rd": 1,
                "r": [
                    {
                        "t": "MATRIX",
                        "a": 50
                    },
                    {
                        "t": "TENSOR",
                        "a": 50
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 4,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 5,
            "y": 7
        },
        {
            "type": "ROAD",
            "x": 6,
            "y": 7
        }
    ],
    "gates": []
}