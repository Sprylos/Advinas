{
    "width": 7,
    "height": 3,
    "tiles": [
        {
            "type": "XM_MUSIC_TRACK",
            "d": {
                "id": 1,
                "track": "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"
            }
        },
        {
            "type": "SCRIPT",
            "x": 1,
            "d": {
                "id": 6897944194426368799,
                "script": "--[[\n0.1\n\nDon't mind this comment, it is used during compilation to extract i18n aliases into default\ntranslation files and do not affect the game in any way.\nInstead use the __scriptTranslations = { ... } method (you should find an example somewhere)\n\nI18nGenerator {\n    \"tut_01_010_010_welcome_to_the_infinitode\",\n    \"tut_01_010_020_this_is_an_experimental\",\n    \"tut_01_010_030_anyone_can_take_part\",\n    \"tut_01_010_040_please_follow_instructions\",\n    \"tut_01_010_050_hi_let_me_show_basics\",\n    \"tut_01_010_060_lets_start_with_the_game\",\n    \"tut_01_010_070_tap_on_portal\",\n    \"tut_01_010_080_this_is_a_portal\",\n    \"tut_01_020_010_ive_highlighted_the_other\",\n    \"tut_01_020_020_tap_on_base\",\n    \"tut_01_020_030_you_are_doing_well\",\n    \"tut_01_020_040_so_this_is_your_base\",\n    \"tut_01_020_050_your_task_is_simple\",\n    \"tut_01_030_010_youll_use_towers\",\n    \"tut_01_030_020_towers_can_be_built\",\n    \"tut_01_030_030_tap_on_platform\",\n    \"tut_01_030_040_you_can_choose_the_type\",\n    \"tut_01_030_050_each_type_of_tower\",\n    \"tut_01_040_010_you_have_enough_coins\",\n    \"tut_01_040_020_build_basic_tower\",\n    \"tut_01_040_030_great\",\n    \"tut_01_040_040_basic_towers_are_the_most\",\n    \"tut_01_050_010_you_are_prepared_to_call\",\n    \"tut_01_050_020_youll_gain_score_points\",\n    \"tut_01_050_030_next_enemy_wave_will_start\",\n    \"tut_01_050_040_you_can_also_tap\",\n    \"tut_01_060_010_build_new_towers_and_try\",\n    \"tut_01_060_020_fight_off_3_waves\",\n    \"tut_01_060_030_build_one_more_tower\"\n}\n--]]\n\ndofile(\"scripts/utils/binder.lua\") -- loads bind() function which allows to bind and cache Java classes in place\ndofile(\"scripts/utils/tutorial.lua\") -- loads \"tutorial\" thing to use later\n\n-- TAG will be used only for logging\nlocal TAG = \"0.1.lua: \"\n\n-- Creating some getters for convenience:\n-- Note: do not store these values directly into variables as they'll become nil after deserialization (\"SP\" and \"managers\" are always here)\nlocal i18n = function() return managers.LocaleManager.i18n end\nlocal sm = function() return SP._graphics.storylineMessages end\nlocal ql = function() return SP._graphics.questList end\n\n-- We need to store listener objects in variables so we can remove them later\n-- There's no actual need in this unless we need to properly handle script disposal (removing UI layers / unloading out-of-lua resources etc)\n-- ...because the whole script ecosystem will be removed by garbage collector anyways\nlocal setupListener\nlocal disposeListener\n\n-- Some variables needed for the tutorial lifecycle\nlocal questListItem\nlocal s3_sideMenuWasOffscreen -- Stage 3\n\nlog(TAG .. \"Level 0.1 script was successfully loaded\")\n\nlocal tut\ntut = tutorial:new({\n    {-- \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043f\u0430\u0432\u043d\u0435\n        check = function()\n            -- \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 true / false, \u0441\u043e\u043e\u0431\u0449\u0430\u044f \u043e \u0442\u043e\u043c, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u044d\u0442\u0430\u043f\u0430\n            return questListItem ~= nil and SP.map:getSelectedTile() ~= nil and SP.map:getSelectedTile().type == enums.TileType.SPAWN\n        end,\n        start = function()\n            -- \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u043d\u0430\u0447\u0430\u043b\u0435 \u044d\u0442\u0430\u043f\u0430 (\u0437\u0434\u0435\u0441\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e)\n            log(\"Stage 1 start\")\n            sm():queue({\n                tut.ENSOR_TAG .. \" \" .. i18n():get(\"tut_01_010_010_welcome_to_the_infinitode\"),\n                tut.ENSOR_TAG .. \" \" .. i18n():get(\"tut_01_010_020_this_is_an_experimental\"),\n                tut.ENSOR_TAG .. \" \" .. i18n():get(\"tut_01_010_030_anyone_can_take_part\"),\n                tut.ENSOR_TAG .. \" \" .. i18n():get(\"tut_01_010_040_please_follow_instructions\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    tut:delay(1, function()\n                        sm():queue({\n                            tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_010_050_hi_let_me_show_basics\"),\n                            tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_010_060_lets_start_with_the_game\")\n                        })\n                        sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                            run = function()\n                                log(\"Stage 1 sm continue\")\n\n                                -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\n                                questListItem = ql():addQuestListItem()\n                                questListItem:setText(i18n():get(\"tut_01_010_070_tap_on_portal\"))\n\n                                -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u043f\u0430\u0432\u043d\n                                local spawnTile = SP.map:getMap().spawnTiles:get(0)\n                                SP.map:removeHighlights()\n                                SP.map:highlightTile(spawnTile)\n\n                                -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f StorylineMessages\n                                SP._graphics.mainUi:showMessagesButton(true, luajava.createProxy(\"java.lang.Runnable\", {\n                                    run = function()\n                                        -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0443 \u043f\u0440\u043e pan & zoom\n                                        SP._graphics.panZoomTooltip:show();\n\n                                        local animation = luajava.newInstance(GNS .. \"CameraController$BasicAnimation\", spawnTile.center.x, spawnTile.center.y, 2, 1, bind(GDXNS .. \"math.Interpolation\", true).pow2 );\n                                        SP._input.cameraController:animate(animation)\n                                    end\n                                }))\n                            end\n                        }))\n                    end)\n                end\n            }))\n        end,\n        done = function() -- \u0412\u044b\u0431\u0440\u0430\u043b\u0438 \u043f\u043e\u0440\u0442\u0430\u043b\n            -- \u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f (\u0437\u0434\u0435\u0441\u044c \u043d\u0443\u0436\u043d\u043e \u0443\u0431\u0440\u0430\u0442\u044c \u0437\u0430 \u0441\u043e\u0431\u043e\u0439)\n            log(\"Stage 1 done\")\n\n            -- \u0423\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0443 \u0438 \u043a\u0432\u0435\u0441\u0442\n            SP.map:removeHighlights()\n            questListItem:setCompleted(true)\n\n            tut:delay(2, function()\n                ql():removeQuestListItem(questListItem)\n                sm():queue({\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_010_080_this_is_a_portal\")\n                })\n                sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                    run = function()\n                        log(\"Stage 1 done sm continued, starting next stage\")\n                        tut:startNextStage()\n                    end\n                }))\n            end)\n        end\n    },\n    {-- \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0431\u0430\u0437\u0435 \u0438 \u0446\u0435\u043b\u0438 \u0438\u0433\u0440\u044b\n        check = function()\n            return SP.map:getSelectedTile() ~= nil and SP.map:getSelectedTile().type == enums.TileType.TARGET\n        end,\n        start = function()\n            log(\"Stage 2 start\")\n            sm():queue({\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_020_010_ive_highlighted_the_other\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    log(\"Stage 2 sm continue\")\n\n                    -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u0431\u0430\u0437\u0443\n                    local baseTile = SP.map:getMap().targetTile\n                    SP.map:removeHighlights()\n                    SP.map:highlightTile(baseTile)\n\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\n                    questListItem = ql():addQuestListItem()\n                    questListItem:setText(i18n():get(\"tut_01_020_020_tap_on_base\"))\n\n                    local animation = luajava.newInstance(GNS .. \"CameraController$BasicAnimation\", baseTile.center.x, baseTile.center.y, 2, 1, bind(GDXNS .. \"math.Interpolation\", true).pow2 );\n                    SP._input.cameraController:animate(animation)\n                end\n            }))\n        end,\n        done = function() -- \u0412\u044b\u0431\u0440\u0430\u043b\u0438 \u0431\u0430\u0437\u0443\n            log(\"Stage 2 done\")\n\n            SP.map:removeHighlights()\n            questListItem:setCompleted(true)\n\n            -- \u041e\u0442\u043c\u0435\u0447\u0430\u0435\u043c \u043a\u0432\u0435\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f\n            -- managers.BasicLevelManager:setQuestCompleted(\"QTUT1S1\")\n            SP.gameState:addCompletedQuest(\"Q:0.1:1\")\n\n            tut:delay(2, function()\n                ql():removeQuestListItem(questListItem)\n\n                sm():queue({\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_020_030_you_are_doing_well\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_020_040_so_this_is_your_base\")\n                })\n                sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                    run = function()\n                        log(\"Stage 2 done sm continue\")\n\n                        -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\n                        SP._graphics.mainUi:showHealth(true, luajava.createProxy(\"java.lang.Runnable\", {\n                            run = function()\n                                sm():queue({\n                                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_020_050_your_task_is_simple\")\n                                })\n                                sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                                    run = function()\n                                        log(\"Stage 1 done sm continued, starting next stage\")\n                                        tut:startNextStage()\n                                    end\n                                }))\n                            end\n                        }))\n                    end\n                }))\n            end)\n        end\n    },\n    {-- \u041f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430, \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043c\u0435\u043d\u044e \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0430\u0448\u0435\u043d\n        check = function()\n            local tile = SP.map:getSelectedTile()\n            if tile == nil then return false end\n\n            return tile:getX() == 2 and tile:getY() == 1\n        end,\n        start = function()\n            log(\"Stage 3 start\")\n            sm():queue({\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_030_010_youll_use_towers\"),\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_030_020_towers_can_be_built\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443\n                    SP.map:removeHighlights()\n                    SP.map:highlightTile(SP.map:getMap():getTile(2, 1))\n\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0438 \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0438\n                    managers.UiManager:findActor(\"build_menu_tower_build_buttons\"):setVisible(true)\n\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\n                    questListItem = ql():addQuestListItem()\n                    questListItem:setText(i18n():get(\"tut_01_030_030_tap_on_platform\"))\n                end\n            }))\n        end,\n        done = function() -- \u0412\u044b\u0431\u0440\u0430\u043b\u0438 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443\n            log(\"Stage 3 done\")\n\n            SP.map:removeHighlights()\n            questListItem:setCompleted(true)\n\n            tut:delay(2, function()\n                ql():removeQuestListItem(questListItem)\n\n                sm():queue({\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_030_040_you_can_choose_the_type\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_030_050_each_type_of_tower\")\n                })\n                sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                    run = function()\n                        log(\"Stage 3 done sm continue\")\n\n                        -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u043e\u043d\u0435\u0442\u044b\n                        SP._graphics.mainUi:showCoins(true, luajava.createProxy(\"java.lang.Runnable\", {\n                            run = function()\n                                tut:startNextStage()\n                            end\n                        }))\n                    end\n                }))\n            end)\n        end\n    },\n    {-- \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0431\u0430\u0448\u043d\u044e\n        check = function()\n            return SP.tower.towers.size ~= 0\n        end,\n        update = function()\n            local sideMenuOffscreen = SP._graphics.sideMenu:isOffscreen()\n            if s3_sideMenuWasOffscreen ~= sideMenuOffscreen then\n                -- \u041c\u0435\u043d\u044f\u0435\u043c \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 UI\n                managers.UiManager:removeAllHighlights()\n\n                if sideMenuOffscreen then\n                    -- \u041c\u0435\u043d\u044e \u0441\u043a\u0440\u044b\u0442\u043e - \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u043c\u0435\u043d\u044e\n                    managers.UiManager:addHighlight(managers.UiManager:findActor(\"side_menu_toggle_button\"))\n                else\n                    -- \u041c\u0435\u043d\u044e \u043e\u0442\u043a\u0440\u044b\u0442\u043e, \u043f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u043f\u043e\u0441\u0442\u0440\u043e\u0439\u043a\u0438\n                    managers.UiManager:addHighlight(managers.UiManager:findActor(\"build_menu_tower_build_button_BASIC\"))\n                end\n                s3_sideMenuWasOffscreen = sideMenuOffscreen\n            end\n        end,\n        start = function()\n            log(\"Stage 4 start\")\n            sm():queue({\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_040_010_you_have_enough_coins\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    -- \u041f\u043e\u0434\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u043c \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443\n                    SP.map:removeHighlights()\n                    SP.map:highlightTile(SP.map:getMap():getTile(2, 1))\n\n                    -- \u0414\u0435\u043b\u0430\u0435\u043c \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c update() \u043e\u0431\u043d\u043e\u0432\u0438\u043b\u0430\u0441\u044c \u043f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0430 UI\n                    s3_sideMenuWasOffscreen = not SP._graphics.sideMenu:isOffscreen()\n\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\n                    questListItem = ql():addQuestListItem()\n                    questListItem:setText(i18n():get(\"tut_01_040_020_build_basic_tower\"))\n                end\n            }))\n        end,\n        done = function() -- \u041f\u043e\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0431\u0430\u0448\u043d\u044e\n            log(\"Stage 4 done\")\n\n            SP.map:removeHighlights()\n            questListItem:setCompleted(true)\n            SP.gameState:addCompletedQuest(\"Q:0.1:2\")\n\n            tut:delay(2, function()\n                ql():removeQuestListItem(questListItem)\n                managers.UiManager:removeAllHighlights()\n                SP.map:removeHighlights()\n                sm():queue({\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_040_030_great\"),\n                    tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_040_040_basic_towers_are_the_most\"),\n                })\n                sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                    run = function()\n                        tut:startNextStage()\n                    end\n                }))\n            end)\n        end\n    },\n    {-- \u0412\u044b\u0437\u0432\u0430\u0442\u044c \u0432\u043e\u043b\u043d\u0443 \u0438 \u0434\u043e\u0436\u0434\u0430\u0442\u044c\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u0441\u043f\u0430\u0432\u043d\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0432\u0440\u0430\u0433\u0438 \u043f\u0435\u0440\u0432\u043e\u0439 \u0432\u043e\u043b\u043d\u044b\n        check = function()\n            return SP.wave.wave ~= nil\n                    and not (SP.wave.status == bind(\"systems.WaveSystem$Status\").SPAWNING and SP.wave.wave.waveNumber == 1)\n        end,\n        update = function(deltaTime)\n            if SP.tower.towers.size == 0 then\n                -- \u0411\u0430\u0448\u043d\u0438 \u043d\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u044b\n                SP.gameState:triggerGameOver(bind(\"systems.GameStateSystem$GameOverReason\").QUEST_FAILED)\n            end\n        end,\n        start = function()\n            log(\"Stage 5 start\")\n            sm():queue({\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_050_010_you_are_prepared_to_call\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043a\u043d\u043e\u043f\u043a\u0443 \u0432\u044b\u0437\u043e\u0432\u0430 \u0432\u043e\u043b\u043d\u044b\n                    SP._graphics.mainUi:showNextWaveButton(true, nil)\n                end\n            }))\n        end,\n        done = function() -- \u0412\u044b\u0437\u0432\u0430\u043b\u0438 \u0432\u043e\u043b\u043d\u0443\n            log(\"Stage 5 done\")\n            sm():queue({\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_050_020_youll_gain_score_points\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043e\u0447\u043a\u0438\n                    SP._graphics.mainUi:showScore(true, luajava.createProxy(\"java.lang.Runnable\", {\n                        run = function()\n                            sm():queue({\n                                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_050_030_next_enemy_wave_will_start\"),\n                                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_050_040_you_can_also_tap\")\n                            })\n                            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                                run = function()\n                                    tut:startNextStage()\n                                end\n                            }))\n                        end\n                    }))\n                end\n            }))\n        end\n    },\n    {-- \u0414\u043e\u0436\u0434\u0430\u0442\u044c\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u043d\u0430\u0447\u043d\u0435\u0442\u0441\u044f \u0432\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u043b\u043d\u0430\n        check = function()\n            return SP.wave.wave ~= nil and SP.wave.wave.waveNumber >= 2\n        end,\n        update = function(deltaTime)\n            if SP.tower.towers.size == 0 then\n                -- \u0411\u0430\u0448\u043d\u0438 \u043d\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u044b\n                SP.gameState:triggerGameOver(bind(\"systems.GameStateSystem$GameOverReason\").QUEST_FAILED)\n            end\n        end,\n        start = function()\n            log(\"Stage 6 start\")\n        end,\n        done = function() -- \u0412\u044b\u0437\u0432\u0430\u043b\u0438 \u0432\u043e\u043b\u043d\u0443\n            log(\"Stage 6 done\")\n            sm():queue({\n                tut.ADVINAS_TAG .. \" \" .. i18n():get(\"tut_01_060_010_build_new_towers_and_try\")\n            })\n            sm():runOnContinue(luajava.createProxy(\"java.lang.Runnable\", {\n                run = function()\n                    -- \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u0432\u0435\u0441\u0442\u044b\n                    --                    local quest = ql():addQuestListItem()\n                    --                    quest:setText(\"Fight off 3 waves of enemies\")\n                    --\n                    --                    quest = ql():addQuestListItem()\n                    --                    quest:setText(\"Build one more tower\")\n\n                    SP.gameState:addCompletedQuest(\"Q:0.1:3\")\n\n                    local questA\n                    questA = luajava.createProxy(GNS .. \"systems.QuestSystem$Quest\", {\n                        getTitle = function()\n                            return i18n():get(\"tut_01_060_020_fight_off_3_waves\")\n                        end,\n\n                        update = function() end,\n\n                        isCompleted = function()\n                            return SP.wave.wave ~= nil and SP.wave.wave.waveNumber > 3\n                        end,\n\n                        onCompletion = function()\n                            SP._quest:getListItem(questA):setCompleted(true)\n                        end\n                    })\n                    SP._quest:addQuest(questA)\n\n                    local questB\n                    questB = luajava.createProxy(GNS .. \"systems.QuestSystem$Quest\", {\n                        getTitle = function()\n                            return i18n():get(\"tut_01_060_030_build_one_more_tower\")\n                        end,\n\n                        update = function() end,\n\n                        isCompleted = function()\n                            return SP.tower.towers.size >= 2\n                        end,\n\n                        onCompletion = function()\n                            SP._quest:getListItem(questB):setCompleted(true)\n                        end\n                    })\n                    SP._quest:addQuest(questB)\n\n                    -- \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u043d\u043e\u043c\u0435\u0440 \u0432\u043e\u043b\u043d\u044b\n                    SP._graphics.mainUi:showWaveNumber(true, nil)\n                end\n            }))\n        end\n    }\n})\n\nlocal stateSystemListener = luajava.createProxy(GNS .. \"systems.GameStateSystem$GameStateSystemListener\", {\n    realUpdate = function(deltaTime)\n        tut:update(deltaTime)\n    end,\n\n    affectsGameState = function() return false end\n})\n\nsetupListener = function()\n    SP._input:setHotKeysEnabled(false)\n    SP._graphics.mainUi:hideNextWaveButton()\n    SP._graphics.mainUi:hideDrawModeButton()\n    SP._graphics.mainUi:hideCoins()\n    SP._graphics.mainUi:hideHealth()\n    SP._graphics.mainUi:hideScore()\n    SP._graphics.mainUi:hideWaveNumber()\n    SP._graphics.towerMenu:hideTowerExperience()\n    SP.map:setPathTracesDrawing(false)\n    SP.achievement:setEnabled(false)\n    managers.UiManager:findActor(\"spawn_menu_details\"):setVisible(false)\n    managers.UiManager:findActor(\"build_menu_modifiers_tab_button\"):setVisible(false)\n    managers.UiManager:findActor(\"build_menu_default_aim_strategy\"):setVisible(false)\n    managers.UiManager:findActor(\"build_menu_tower_build_buttons\"):setVisible(false)\n    managers.UiManager:findActor(\"tower_menu_abilities\"):setVisible(false)\n    managers.UiManager:findActor(\"tower_menu_upgrade\"):setVisible(false)\n    managers.UiManager:findActor(\"tower_menu_aim_strategy\"):setVisible(false)\n    managers.UiManager:findActor(\"tower_menu_sell_button\"):setVisible(false)\n\n    tut:start()\n\n    -- \u0421\u043b\u0443\u0448\u0430\u0435\u043c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\n    SP.gameState.listeners:add(stateSystemListener)\n\n    --\n    addEventHandler(\"SystemDispose\", disposeListener)\n    log(TAG .. \"Started\")\nend\n\ndisposeListener = function()\n    SP.gameState.listeners:remove(stateSystemListener)\n    --\n    removeEventHandler(\"SystemPostSetup\", setupListener)\n    removeEventHandler(\"SystemDispose\", disposeListener)\n    log(TAG .. \"Stopped\")\nend\n\naddEventHandler(\"SystemPostSetup\", setupListener)"
            }
        },
        {
            "type": "ROAD",
            "x": 3
        },
        {
            "type": "ROAD",
            "x": 4
        },
        {
            "type": "ROAD",
            "x": 5
        },
        {
            "type": "TARGET",
            "x": 6,
            "d": {
                "da": true,
                "usgv": true,
                "gv": [
                    {
                        "t": "STARTING_MONEY",
                        "v": 48,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "GAME_SAVES",
                        "v": 0,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "MANUAL_GAME_SPEED",
                        "v": 0,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "TOWERS_MAX_EXP_LEVEL",
                        "v": 1,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "TOWERS_MAX_UPGRADE_LEVEL",
                        "v": 0,
                        "o": true,
                        "b": true
                    },
                    {
                        "t": "TOWER_TYPE_BASIC",
                        "v": 1,
                        "o": true,
                        "b": true
                    }
                ]
            }
        },
        {
            "type": "PLATFORM",
            "x": 1,
            "y": 1
        },
        {
            "type": "PLATFORM",
            "x": 2,
            "y": 1
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 1
        },
        {
            "type": "PLATFORM",
            "x": 4,
            "y": 1
        },
        {
            "type": "PLATFORM",
            "x": 5,
            "y": 1
        },
        {
            "type": "SPAWN",
            "y": 2,
            "d": {
                "d": 100,
                "ae": [
                    {
                        "t": "REGULAR",
                        "f": 1,
                        "l": 0
                    }
                ]
            }
        },
        {
            "type": "ROAD",
            "x": 1,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 2,
            "y": 2
        },
        {
            "type": "ROAD",
            "x": 3,
            "y": 2
        }
    ],
    "gates": []
}